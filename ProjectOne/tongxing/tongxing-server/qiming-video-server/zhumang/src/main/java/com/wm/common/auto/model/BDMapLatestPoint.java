package com.wangming.common.auto.model;

import java.io.Serializable;
import java.util.Date;

public class BDMapLatestPoint implements Serializable {
    /**
     * 
     * 表 : bdmap_latestpoint
     * 对应字段 : id
     */
    private Integer id;

    /**
     * entity唯一标识
     * 表 : bdmap_latestpoint
     * 对应字段 : entity_name
     */
    private String entityName;

    /**
     * service的ID
     * 表 : bdmap_latestpoint
     * 对应字段 : service_id
     */
    private Integer serviceId;

    /**
     * 1为 gcj02：国测局加密坐标；2为 bd09ll：百度经纬度坐标
     * 表 : bdmap_latestpoint
     * 对应字段 : coord_type_output
     */
    private String coordTypeOutput;

    /**
     * 经度
     * 表 : bdmap_latestpoint
     * 对应字段 : longitude
     */
    private Double longitude;

    /**
     * 纬度
     * 表 : bdmap_latestpoint
     * 对应字段 : latitude
     */
    private Double latitude;

    /**
     * 定位时间
     * 表 : bdmap_latestpoint
     * 对应字段 : loc_time
     */
    private Date locTime;

    /**
     * 定位精度
     * 表 : bdmap_latestpoint
     * 对应字段 : radius
     */
    private Double radius;

    /**
     * 方向
     * 表 : bdmap_latestpoint
     * 对应字段 : direction
     */
    private Integer direction;

    /**
     * 高度
     * 表 : bdmap_latestpoint
     * 对应字段 : height
     */
    private Float height;

    /**
     * 轨迹对应的定位方式（鹰眼分析得出）可能的返回值：未知；GPS/北斗定位；网络定位；基站定位
     * 表 : bdmap_latestpoint
     * 对应字段 : locate_mode
     */
    private Integer locateMode;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bdmap_latestpoint
     *
     * @MBG Generated Tue Feb 19 22:24:56 CST 2019
     */
    private static final long serialVersionUID = 1L;

    /**
     * get method 
     *
     * @return bdmap_latestpoint.id：
     */
    public Integer getId() {
        return id;
    }

    /**
     * set method 
     *
     * @param id  
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * get method 
     *
     * @return bdmap_latestpoint.entity_name：entity唯一标识
     */
    public String getEntityName() {
        return entityName;
    }

    /**
     * set method 
     *
     * @param entityName  entity唯一标识
     */
    public void setEntityName(String entityName) {
        this.entityName = entityName == null ? null : entityName.trim();
    }

    /**
     * get method 
     *
     * @return bdmap_latestpoint.service_id：service的ID
     */
    public Integer getServiceId() {
        return serviceId;
    }

    /**
     * set method 
     *
     * @param serviceId  service的ID
     */
    public void setServiceId(Integer serviceId) {
        this.serviceId = serviceId;
    }

    /**
     * get method 
     *
     * @return bdmap_latestpoint.coord_type_output：1为 gcj02：国测局加密坐标；2为 bd09ll：百度经纬度坐标
     */
    public String getCoordTypeOutput() {
        return coordTypeOutput;
    }

    /**
     * set method 
     *
     * @param coordTypeOutput  1为 gcj02：国测局加密坐标；2为 bd09ll：百度经纬度坐标
     */
    public void setCoordTypeOutput(String coordTypeOutput) {
        this.coordTypeOutput = coordTypeOutput == null ? null : coordTypeOutput.trim();
    }

    /**
     * get method 
     *
     * @return bdmap_latestpoint.longitude：经度
     */
    public Double getLongitude() {
        return longitude;
    }

    /**
     * set method 
     *
     * @param longitude  经度
     */
    public void setLongitude(Double longitude) {
        this.longitude = longitude;
    }

    /**
     * get method 
     *
     * @return bdmap_latestpoint.latitude：纬度
     */
    public Double getLatitude() {
        return latitude;
    }

    /**
     * set method 
     *
     * @param latitude  纬度
     */
    public void setLatitude(Double latitude) {
        this.latitude = latitude;
    }

    /**
     * get method 
     *
     * @return bdmap_latestpoint.loc_time：定位时间
     */
    public Date getLocTime() {
        return locTime;
    }

    /**
     * set method 
     *
     * @param locTime  定位时间
     */
    public void setLocTime(Date locTime) {
        this.locTime = locTime;
    }

    /**
     * get method 
     *
     * @return bdmap_latestpoint.radius：定位精度
     */
    public Double getRadius() {
        return radius;
    }

    /**
     * set method 
     *
     * @param radius  定位精度
     */
    public void setRadius(Double radius) {
        this.radius = radius;
    }

    /**
     * get method 
     *
     * @return bdmap_latestpoint.direction：方向
     */
    public Integer getDirection() {
        return direction;
    }

    /**
     * set method 
     *
     * @param direction  方向
     */
    public void setDirection(Integer direction) {
        this.direction = direction;
    }

    /**
     * get method 
     *
     * @return bdmap_latestpoint.height：高度
     */
    public Float getHeight() {
        return height;
    }

    /**
     * set method 
     *
     * @param height  高度
     */
    public void setHeight(Float height) {
        this.height = height;
    }

    /**
     * get method 
     *
     * @return bdmap_latestpoint.locate_mode：轨迹对应的定位方式（鹰眼分析得出）可能的返回值：未知；GPS/北斗定位；网络定位；基站定位
     */
    public Integer getLocateMode() {
        return locateMode;
    }

    /**
     * set method 
     *
     * @param locateMode  轨迹对应的定位方式（鹰眼分析得出）可能的返回值：未知；GPS/北斗定位；网络定位；基站定位
     */
    public void setLocateMode(Integer locateMode) {
        this.locateMode = locateMode;
    }

    /**
     *
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", entityName=").append(entityName);
        sb.append(", serviceId=").append(serviceId);
        sb.append(", coordTypeOutput=").append(coordTypeOutput);
        sb.append(", longitude=").append(longitude);
        sb.append(", latitude=").append(latitude);
        sb.append(", locTime=").append(locTime);
        sb.append(", radius=").append(radius);
        sb.append(", direction=").append(direction);
        sb.append(", height=").append(height);
        sb.append(", locateMode=").append(locateMode);
        sb.append("]");
        return sb.toString();
    }
}